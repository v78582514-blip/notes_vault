name: Build Android APK (Flutter)

on:
  workflow_dispatch:
  push:
    paths:
      - "lib/**"
      - "pubspec.yaml"
      - "android/**"
      - ".github/workflows/flutter-android.yml"

permissions:
  contents: read

concurrency:
  group: android-apk-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: "3.35.5"
  JAVA_VERSION: "17"

jobs:
  debug-apk:
    name: Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify main.dart
        run: |
          if [ ! -f "lib/main.dart" ]; then
            echo "::error::lib/main.dart not found"
            exit 1
          fi

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze (optional)
        run: flutter analyze
        continue-on-error: true

      - name: Build debug APK
        run: |
          flutter clean
          flutter build apk --debug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: build/app/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

  release-apk:
    name: Release APK (Signed)
    runs-on: ubuntu-latest
    needs: debug-apk
    if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Prepare keystore (optional)
        shell: bash
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
            echo "Setting up release keystore..."
            echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
            {
              echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
              echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}"
              echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}"
              echo "storeFile=upload-keystore.jks"
            } > android/key.properties
          else
            echo "No keystore secrets provided â€” using debug signing config."
          fi

      - name: Build release APK
        run: |
          flutter clean
          flutter build apk --release

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/apk/release/app-release.apk
          if-no-files-found: error
